buildscript {
	ext {
	}
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'idea'

sourceCompatibility = 1.8

jacoco {
	toolVersion = "0.7.9"
}

repositories {
	mavenLocal()
    if (project.hasProperty('repositoryUrl')) {
        maven { url "${repositoryUrl}" }
    } else {
        mavenCentral()
    }
}

dependencies {
	compile("au.com.dius:pact-jvm-model:3.5.8")
	compile("com.google.guava:guava:20.0")
    compile("junit:junit:4.12")
    compile("org.springframework:spring-test:4.3.12.RELEASE")
    compile("org.springframework:spring-web:4.3.12.RELEASE")
    compile("org.springframework:spring-webmvc:4.3.12.RELEASE")
    compile("javax.servlet:javax.servlet-api:4.0.0")
    compile("org.codehaus.groovy:groovy-all:2.4.12")
}

jar {
	manifest {
		attributes('Implementation-Title': project.name,
				   'Implementation-Version': version,
				   'Build-By': System.getProperty('user.name'),
				   'Build-No': System.getenv().BUILD_NUMBER?.toInteger() ?: 'local build',
				   'Git-branch': System.getenv().GIT_BRANCH ?: 'local build',
				   'Git-commit': System.getenv().GIT_COMMIT ?: 'local build',
				   'Build-Date': new Date(),
				   'Build-JDK': System.getProperty('java.version'),
				   'Build-Gradle': gradle.gradleVersion  
		)
	}
}		

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    ext.nexusUrl = project.version.endsWith('-SNAPSHOT') ?
            project.findProperty('nexusSnapshotUrl')?: 'undefined snapshot url' :
            project.getProperty('nexusReleaseUrl') ?: 'undefined release url'
    ext.nexusUser = project.findProperty('nexusUser') ?: 'undefined user'
    ext.nexusPassword = project.findProperty('nexusPassword') ?: 'undefined password'
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            credentials {
                username "${nexusUser}"
                password "${nexusPassword}"
            }
            url "${nexusUrl}"
        }
    }
}

eclipse {
   classpath {
	   containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
	   containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
   }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

task wrapper(type: Wrapper) {
    distributionUrl = "${nexusGradleUrl}"
}
